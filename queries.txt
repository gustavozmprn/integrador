create table if not exists cliente(
	cpf text not null,
	nome varchar(32) not null,
	descricao text,
	cep varchar(8) not null,
	telefone varchar(12) not null,
	logradouro text not null,
	numero_endrc integer not null,
	complemento text not null,
	email varchar(50) not null,
	constraint cliente_pkey primary key (cpf)
);

create table if not exists funcionario(
	username varchar(15) not null,
	senha text not null,
	nome varchar(32) not null,
	descricao text,
	cep varchar(8) not null,
	telefone varchar(12) not null,
	logradouro varchar(200) not null,
	numero_endrc integer not null,
	complemento text not null,
	email varchar(50) not null,
	constraint func_pkey primary key (username)
);
create table if not exists categoria_servico(
	nome text not null,
	qtd_itens int not null,
	descricao text not null,
	categoria_mae text,
	constraint cat_serv_pkey primary key (nome),
	constraint cat_mae_fkey foreign key (categoria_mae) references categoria_servico (nome) on delete cascade
);

create table if not exists servico(
	num_servico int not null,
	cpfc text not null,
	func_user varchar(15) not null,
	horas_trb numeric not null,
	preco_mobra numeric not null,
	constraint servico_pkey primary key (num_servico),
	constraint cpf_cnpj_fkey foreign key (cpfc) references cliente (cpf) on delete cascade,
	constraint func_user_fkey foreign key (func_user) references funcionario (username) on delete cascade
);

create table if not exists lista_tarefa(
	num_tarefa serial,
	func_resp varchar(15) not null,
	nome text not null,
	descr text not null,
	data_inicio date default now(),
	constraint lista_tarefa_pkey primary key (num_tarefa),
	constraint func_resp_fkey foreign key (func_resp) references funcionario (username) on delete cascade
);

create table if not exists categoria_produtos(
	nome text not null,
	descr text not null,
	categoriamae text,
	constraint categoria_prodst_pkey primary key (nome),
	constraint categoria_mae_fkey foreign key (categoriamae) references categoria_produtos(nome) on delete cascade
);

create table if not exists produto(
	codigo int not null,
	categoria text not null,
	nome text not null,
	preco numeric not null,
	quantidade int not null,
	descr text not null,
	constraint produto_pkey primary key (codigo),
	constraint categoria_p_fkey foreign key (categoria) references categoria_produtos(nome) on delete cascade
);

create table if not exists produtos_servicos(
	num_servico int not null,
	codigo_produto int not null,
	qtd_produto int not null,
	preco_produto numeric not null,
	constraint num_servico_fkey foreign key (num_servico) references servico (num_servico) on delete cascade,
	constraint cdg_produto_fkey foreign key (codigo_produto) references produto (codigo) on delete cascade
);
create table if not exists tipo_permissao(
	id serial,
	descr text not null,
	constraint tipo_permissao_pk primary key (id)
);
create table if not exists permissoes(
	perm_id int not null,
	func_user varchar(15) not null,
	constraint perms_pkey primary key (perm_id, func_user),
	constraint permissao_id_fk foreign key (perm_id) references tipo_permissao (id) on delete cascade,
	constraint func_user_fk foreign key (func_user) references funcionario (username) on delete cascade
);
insert into tipo_permissao(descr) values ('ADMINISTRADOR');
insert into tipo_permissao(descr) values ('NORMAL');
CREATE USER aplicacao_user PASSWORD 'aplicacao_user';
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA "public" to aplicacao_user;
GRANT SELECT, USAGE, UPDATE ON ALL SEQUENCES IN SCHEMA "public" to aplicacao_user;